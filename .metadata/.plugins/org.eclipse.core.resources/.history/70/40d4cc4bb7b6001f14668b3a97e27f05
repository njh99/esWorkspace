package co.kh.dev352.common;

import java.sql.Connection;
import java.util.ArrayList;

public final class ConnectionPool {
	// 1. Oracle Driver를 정적처리해서 로드한다.
	static {
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	// 2. 맴버변수 4개
	private ArrayList<Connection> free; 
    private ArrayList<Connection> used; //사용중인 커넥션을 저장하는 변수
    private int initialCons = 10;    //최초로 초기 커넥션수
    private int maxCons = 20;    //최대 커넥션수
    private int numCons = 0;     //총 Connection 수
	/*
	 * private String url = "jdbc:oracle:thin:@localhost:1521:xe"; private String
	 * user = "hr"; private String password = "hr";
	 */
    
    // 3. 싱글톤 (자기참조 맴버 변수, 생성자함수, 자기참조맴버변수 겟터)
    private static ConnectionPool cp;

	public static ConnectionPool getInstance() {
		//딱 한번만 실행한다. 절대 두번 실행하지 않는다.
		if(cp==null) {
			synchronized (ConnectionPool.class) {
				
				cp = new ConnectionPool();
			}
		}
		return cp;
	}

	private ConnectionPool() {
		super();
	
	}
	
	

	
	
    
    
}
