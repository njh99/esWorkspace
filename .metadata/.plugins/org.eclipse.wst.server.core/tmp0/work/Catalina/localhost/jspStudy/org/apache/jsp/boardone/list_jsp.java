/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-12-16 02:13:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.boardone;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import co.kh.dev.boardone.model.BoardDAO;
import co.kh.dev.boardone.model.BoardVO;
import java.util.ArrayList;
import java.text.SimpleDateFormat;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/boardone/view/color.jsp", Long.valueOf(1734307976558L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("co.kh.dev.boardone.model.BoardDAO");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("co.kh.dev.boardone.model.BoardVO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
 
 String bodyback_c="#e0ffff";
 String back_c="#8fbc8f";
 String title_c="#5f9ea0";
 String value_c="#b0e0e6";
 String bar="#778899";

      out.write('\r');
      out.write('\n');

 //1. 페이징기법:  페이지 사이즈: 1페이지 10개만 보여줘
 int pageSize = 3; 
 //2. 페이징기법: 페이지번호선택(기본 페이지는 1페이지)
 request.setCharacterEncoding("utf-8");
 String pageNum = request.getParameter("pageNum");
 if(pageNum == null){ pageNum = "1"; }
 //3. 현재페이지 설정, start, end 
 int currentPage = Integer.parseInt(pageNum);
 int start = (currentPage - 1)*pageSize + 1; //4page 시작보여줘:  (4-1)*10 + 1 => 31
 int end = (currentPage)*pageSize; //4page 끝번호 보여줘:  (4)*10  => 40
 
 SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

      out.write('\r');
      out.write('\n');

//4. 해당된 페이지 10개를 가져온다. 
int number =0;
ArrayList<BoardVO> boardList = null;
BoardDAO bdao = BoardDAO.getInstance();
//전체글갯수
int count = bdao.selectCountDB(); 
if (count > 0) {
	//(현재페이지 내용 10개만 가져온다.)	
	boardList = bdao.selectStartEndDB(start, end);
}
//5. 만약 4페이지(31~40)를 가져왔다면 number = 40  
//수정<4>  전체갯수 100  1페이지(100~91), 2페이지 (90~81)
number = count - (currentPage -1) * pageSize ;



      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>게시판</title>\r\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"");
      out.print(bodyback_c);
      out.write("\">\r\n");
      out.write("<main>\r\n");
      out.write("	<b>글목록(전체 글:");
      out.print(count);
      out.write(")</b>\r\n");
      out.write("<table width=\"700\">\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td align=\"right\" bgcolor=\"");
      out.print(value_c);
      out.write("\">\r\n");
      out.write("    <a href=\"writeForm.jsp\">글쓰기</a>\r\n");
      out.write("    </td>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table>\r\n");

    if (count == 0) {

      out.write("\r\n");
      out.write("<table width=\"700\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\">\r\n");
      out.write("<tr>\r\n");
      out.write("    <td align=\"center\">\r\n");
      out.write("    게시판에 저장된 글이 없습니다.\r\n");
      out.write("    </td>\r\n");
      out.write("</table>\r\n");
  } else {    
      out.write("\r\n");
      out.write("<table border=\"1\" width=\"700\" cellpadding=\"0\" cellspacing=\"0\" align=\"center\"> \r\n");
      out.write("    <tr height=\"30\" bgcolor=\"");
      out.print(value_c);
      out.write("\"> \r\n");
      out.write("      <td align=\"center\"  width=\"50\"  >번 호</td> \r\n");
      out.write("      <td align=\"center\"  width=\"250\" >제   목</td> \r\n");
      out.write("      <td align=\"center\"  width=\"100\" >작성자</td>\r\n");
      out.write("      <td align=\"center\"  width=\"150\" >작성일</td> \r\n");
      out.write("      <td align=\"center\"  width=\"50\" >조 회</td> \r\n");
      out.write("      <td align=\"center\"  width=\"100\" >IP</td>    \r\n");
      out.write("    </tr>\r\n");
  
    for ( BoardVO article :  boardList) {

      out.write("\r\n");
      out.write("   <tr height=\"30\">\r\n");
      out.write("    <td align=\"center\"  width=\"50\" > ");
      out.print( number--);
      out.write("</td>\r\n");
      out.write("    <td  width=\"250\" >\r\n");
      out.write("    <!-- 수정 <5> -->\r\n");
      out.write("    <a href=\"content.jsp?num=");
      out.print(article.getNum());
      out.write("&pageNum=1\">\r\n");
      out.write("	 <!-- 수정<6> -->\r\n");

			//6. depth 값에 따라서 5배수 증가를 해서 화면에 보여줘야된다.
			//depth : 1 => 길이 : 5, 2 => 10
      int wid=0; 
      if(article.getDepth()>0){
        wid=5*(article.getDepth());

      out.write("\r\n");
      out.write("       <img src=\"images/level.gif\" width=\"");
      out.print(wid);
      out.write("\" height=\"16\">\r\n");
      out.write("       <img src=\"images/re.gif\">\r\n");
    }else{
      out.write("\r\n");
      out.write("       <img src=\"images/level.gif\" width=\"");
      out.print(wid);
      out.write("\" height=\"16\">\r\n");
}
      out.write("\r\n");
      out.write("          ");
      out.print(article.getSubject());
      out.write("</a> \r\n");
      out.write("          ");
 if(article.getReadcount()>=20){
      out.write("\r\n");
      out.write("         <img src=\"images/hot.gif\" border=\"0\"  height=\"16\">");
}
      out.write(" </td>\r\n");
      out.write("    <td align=\"center\"  width=\"100\"> \r\n");
      out.write("       <a href=\"mailto:");
      out.print(article.getEmail());
      out.write("\">\r\n");
      out.write("		");
      out.print(article.getWriter());
      out.write("</a></td>\r\n");
      out.write("    <td align=\"center\"  width=\"150\">\r\n");
      out.write("		");
      out.print( sdf.format(article.getRegdate()));
      out.write("</td>\r\n");
      out.write("    <td align=\"center\"  width=\"50\">");
      out.print(article.getReadcount());
      out.write("</td>\r\n");
      out.write("    <td align=\"center\" width=\"100\" >");
      out.print(article.getIp());
      out.write("</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("     ");
}
      out.write('\r');
      out.write('\n');
}
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</main>\r\n");
      out.write("<br>\r\n");
      out.write("<!-- 수정 <7> -->\r\n");
      out.write("<div class= \"center\">\r\n");

    if (count > 0) {
       int pageBlock = 3;
       int imsi = count % pageSize == 0 ? 0 : 1;
       int pageCount = count / pageSize + imsi;
       int startPage = (int)((currentPage-1)/pageBlock)*pageBlock + 1;
       int endPage = startPage + pageBlock - 1;
       if (endPage > pageCount) endPage = pageCount;  
       if (startPage > pageBlock) {    
      out.write("\r\n");
      out.write("      <a href=\"list.jsp?pageNum=");
      out.print(startPage-pageBlock);
      out.write("\">[이전]</a>\r\n");

      }
      for (int i = startPage ; i <= endPage ; i++) {  
    	  if(currentPage == i){

      out.write("\r\n");
      out.write("    		  <a href=\"list.jsp?pageNum=");
      out.print( i );
      out.write("\">[[");
      out.print( i );
      out.write("]]</a>\r\n");
    	  }else{ 
      out.write("\r\n");
      out.write("    		  <a href=\"list.jsp?pageNum=");
      out.print( i );
      out.write('"');
      out.write('>');
      out.write('[');
      out.print( i );
      out.write("]</a>\r\n");
    	  }

      out.write("\r\n");
      out.write("     \r\n");

      }
      if (endPage < pageCount) {  
      out.write("\r\n");
      out.write("      <a href=\"list.jsp?pageNum=");
      out.print(startPage+pageBlock);
      out.write("\">[다음]</a>\r\n");

        }
    }

      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
