/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-12-10 03:38:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jdbc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import co.kh.dev.tempmember.model.TempMEmberDAO;
import co.kh.dev.tempmember.model.TempMemberVO;

public final class usingJDBC_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("co.kh.dev.tempmember.model.TempMEmberDAO");
    _jspx_imports_classes.add("co.kh.dev.tempmember.model.TempMemberVO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 1. 사용자정보를 가져온다  -->\r\n");
      out.write("<!-- 2. CURD -->\r\n");

TempMEmberDAO tmdao = new TempMEmberDAO();
ArrayList<TempMemberVO> templist = tmdao.selectDB(); // DB에서 사용자 목록 가져오기
int counter = 0;

      out.write("\r\n");
      out.write("<!-- 3. 화면설계(자바코드(x) -> jsp service 진행) -->\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>JSP에서 데이터베이스 연동</title>\r\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#FFFFCC\">\r\n");
      out.write("	<h2>JSP 스크립틀릿에서 데이터베이스 연동 예제입니다....</h2>\r\n");
      out.write("	<br></br>\r\n");
      out.write("	<h3>회원정보</h3>\r\n");
      out.write("	<table bordercolor=\"oceanblue\" border=\"1\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td><strong>ID</strong></td>\r\n");
      out.write("			<td><strong>PASSWD</strong></td>\r\n");
      out.write("			<td><strong>NAME</strong></td>\r\n");
      out.write("			<td><strong>MEM_NUM1</strong></td>\r\n");
      out.write("			<td><strong>MEM_NUM2</strong></td>\r\n");
      out.write("			<td><strong>E_MAIL</strong></td>\r\n");
      out.write("			<td><strong>PHONE</strong></td>\r\n");
      out.write("			<td><strong>ZIPCODE</strong></td>\r\n");
      out.write("			<td><strong>ADDRESS</strong></td>\r\n");
      out.write("			<td><strong>JOB</strong></td>\r\n");
      out.write("		</tr>\r\n");

      for( TempMemberVO data: templist){
       
            
 
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>");
      out.print( data.getId() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( data.getPasswd() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( data.getName() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( data.getMemNum1() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( data.getMemNum2() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( data.geteMail() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( data.getPhone() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( data.getZipcode() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( data.getAddress() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( data.getJob() );
      out.write("</td>\r\n");
      out.write("			");

            counter++;
         }//end for
     
 
      out.write("\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	<br></br> total records :\r\n");
      out.write("	");
      out.print( counter );
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
