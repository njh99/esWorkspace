/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-12-09 02:47:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_005fmain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!-- 1. 사용자정보를 가져온다  -->\n");
      out.write("<!-- 2. CURD -->\n");
      out.write("<!-- 3. 화면설계(자바코드(x) -> jsp service 진행) -->\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title>사용자 정보</title>\n");
      out.write("<style>\n");
      out.write("#my_table {\n");
      out.write("	margin: 0 auto;\n");
      out.write("	border-collapse: collapse;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	");

	if (session == null || session.getAttribute("id") == null) {
	
      out.write("\n");
      out.write("	<!-- 세션이 없거나, id 속성이 없으면 로그인 폼을 출력 -->\n");
      out.write("	<form method=\"post\" action=\"login_check.jsp\">\n");
      out.write("		<table border=\"1\" width=\"300\" id=\"my_table\">\n");
      out.write("			<tr>\n");
      out.write("				<th width=\"100\">아이디</th>\n");
      out.write("				<td width=\"200\"><input type=\"text\" name=\"id\" required></td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<th width=\"100\">비번</th>\n");
      out.write("				<td width=\"200\"><input type=\"password\" name=\"pass\" required></td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<td align=\"center\" colspan=\"2\"><input type=\"button\"\n");
      out.write("					onclick=\"location.href = 'new_member.jsp'\" value=\"회원가입\"> <input\n");
      out.write("					type=\"submit\" value=\"로그인\"></td>\n");
      out.write("			</tr>\n");
      out.write("		</table>\n");
      out.write("	</form>\n");
      out.write("\n");
      out.write("	");

	} else {
	// 세션이 있고, 관리자인 경우
	String id = (String) session.getAttribute("id");
	String pass = (String) session.getAttribute("pass");
	String name = (String) session.getAttribute("name");

	String superID = "admin";
	if (superID.equals(id)) {
	
      out.write("\n");
      out.write("	<!-- 관리자 정보 출력 -->\n");
      out.write("	<table border=\"1\" width=\"500\" id=\"my_table\">\n");
      out.write("		<tr>\n");
      out.write("			<td width=\"500\" align=\"center\">관리자 계정: ");
      out.print(id);
      out.write("</td>\n");
      out.write("		</tr>\n");
      out.write("		<tr>\n");
      out.write("			<td width=\"500\" align=\"center\">패스워드: ");
      out.print(pass);
      out.write("</td>\n");
      out.write("		</tr>\n");
      out.write("		<tr>\n");
      out.write("			<td width=\"500\" align=\"center\">이름: ");
      out.print(name);
      out.write("</td>\n");
      out.write("		</tr>\n");
      out.write("		<tr>\n");
      out.write("			<td align=\"center\"><input type=\"button\"\n");
      out.write("				onclick=\"location.href = 'member_list.jsp'\" value=\"회원들 정보\">\n");
      out.write("				<input type=\"button\" onclick=\"location.href = 'logout.jsp'\" value=\"로그아웃\"></td>\n");
      out.write("		</tr>\n");
      out.write("	</table>\n");
      out.write("\n");
      out.write("	");

	} else {
	// 일반 사용자 정보 출력
	
      out.write("\n");
      out.write("	<!-- 일반 사용자 정보 출력 -->\n");
      out.write("	<table border=\"1\" width=\"500\" id=\"my_table\">\n");
      out.write("		<tr>\n");
      out.write("			<td width=\"500\" align=\"center\">");
      out.print(id);
      out.write(" 님 로그인 되었습니다.</td>\n");
      out.write("		</tr>\n");
      out.write("		<tr>\n");
      out.write("			<td width=\"500\" align=\"center\">패스워드: ");
      out.print(pass);
      out.write("</td>\n");
      out.write("		</tr>\n");
      out.write("		<tr>\n");
      out.write("			<td width=\"500\" align=\"center\">이름: ");
      out.print(name);
      out.write("</td>\n");
      out.write("		</tr>\n");
      out.write("		<tr>\n");
      out.write("			<td align=\"center\">\n");
      out.write("				<input type=\"button\" onclick=\"location.href = 'member_change.jsp'\" value=\"회원정보변경\">\n");
      out.write("				<input type=\"button\" onclick=\"location.href = 'logout.jsp'\" value=\"로그아웃\"> \n");
      out.write("				<input type=\"button\" onclick=\"location.href = 'member_delete_question.jsp'\" value=\"탈퇴하기\">\n");
      out.write("			</td>\n");
      out.write("		</tr>\n");
      out.write("	</table>\n");
      out.write("	");

		} //일반 사용자 정보 출력 부분 end
} //세션이 있고, 관리자인 경우부분 end
	
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
