/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-12-18 08:32:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.makelogin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mypage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String id = (String) session.getAttribute("id");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>마이페이지</title>\r\n");
      out.write("<script src=\"script.js?timestamp=");
      out.print( System.currentTimeMillis() );
      out.write("\"></script>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"mainhomepage.css\" />\r\n");
      out.write("  <script src=\"mainhomepage.js\"></script>\r\n");
      out.write("  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css2?family=Jua&family=Kablammo&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("  <script src=\"https://kit.fontawesome.com/01ba7af47f.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("  	<nav class=\"nav_naver\">\r\n");
      out.write("       <div class=\"dropdown1\">\r\n");
      out.write("  <button onclick=\"myFunction()\" class=\"dropbtn1\"><i class=\"fa-solid fa-bars\"></i></button>\r\n");
      out.write("  <div id=\"myDropdown\" class=\"dropdown-content1\">\r\n");
      out.write("    <a href=\"#home\">공지사항</a>\r\n");
      out.write("    <a href=\"#about\">고객센터</a>\r\n");
      out.write("    <a href=\"#contact\">게시판</a>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("      \r\n");
      out.write("      <div class=\"nav_naver_font\">\r\n");
      out.write("          <a class=\"naver_logo\" href=\"#\"><i class=\"fa-solid fa-basket-shopping\"></i></a>\r\n");
      out.write("          <a class=\"sport_logo\" href=\"#\">CART |</a>\r\n");
      out.write("          <a class=\"sport_logo\" href=\"mypage.jsp\">MYPAGE |</a>\r\n");
      out.write("          <a class=\"sport_logo\" href=\"#\">LOGOUT</a>\r\n");
      out.write("      </div>\r\n");
      out.write("        </nav>\r\n");
      out.write("   <nav class=\"top_menu\">\r\n");
      out.write("    <div class=\"header-logo\">\r\n");
      out.write("      <i class=\"fa-solid fa-futbol\"></i>\r\n");
      out.write("      <a href=\"#\">KICK OFF</a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <ul class=\"header-menu\">\r\n");
      out.write("      <li class=\"dropdown\">\r\n");
      out.write("        <a href=\"#\" class=\"dropbtn\"><img src=\"./media/LaLiga_EA_Sports_2023_Vertical_Logo.svg.png\"alt=\"laliga\" class=\"la\"></img></a>\r\n");
      out.write("        <div class=\"dropdown-content\">\r\n");
      out.write("          <a href=\"#\">바르셀로나</a>\r\n");
      out.write("          <a href=\"#\">레알 마드리드</a>\r\n");
      out.write("          <a href=\"#\">ATM</a>\r\n");
      out.write("        </div>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li class=\"dropdown\">\r\n");
      out.write("        <a href=\"#\" class=\"dropbtn\"><img src=\"./media/pl-main-logo.png\"alt=\"laliga\" class=\"epl\"></img></a>\r\n");
      out.write("        <div class=\"dropdown-content\">\r\n");
      out.write("          <a href=\"#\">맨체스터 시티</a>\r\n");
      out.write("          <a href=\"#\">첼시</a>\r\n");
      out.write("          <a href=\"#\">아스날</a>\r\n");
      out.write("          <a href=\"#\">맨체스터 유나이티드</a>\r\n");
      out.write("          <a href=\"#\">토트넘</a>\r\n");
      out.write("        </div>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li class=\"dropdown\">\r\n");
      out.write("        <a href=\"#\" class=\"dropbtn\"><img src=\"./media/bundesliga-logo.png\"alt=\"laliga\" class=\"bun\"></img></a>\r\n");
      out.write("        <div class=\"dropdown-content\">\r\n");
      out.write("          <a href=\"#\">바이에르 뮌헨</a>\r\n");
      out.write("          <a href=\"#\">도르트문트</a>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("      </li>\r\n");
      out.write("      <li class=\"dropdown\">\r\n");
      out.write("        <a href=\"#\" class=\"dropbtn\"><img src=\"./media/Serie_A_logo_2022.svg.png\"alt=\"laliga\" class=\"bun\"></img></a>\r\n");
      out.write("        <div class=\"dropdown-content\">\r\n");
      out.write("          <a href=\"#\">인테르</a>\r\n");
      out.write("          <a href=\"#\">AC밀란</a>\r\n");
      out.write("          \r\n");
      out.write("        </div>\r\n");
      out.write("      </li>\r\n");
      out.write("    </ul>\r\n");
      out.write("\r\n");
      out.write("    <ul class=\"header-icons\">\r\n");
      out.write("      <li>\r\n");
      out.write("        <a href=\"login.jsp\" \r\n");
      out.write("				onclick=\"window.open(this.href, '_blank', 'width=500, height=350'); return false;\">환영합니다</a>\r\n");
      out.write("      </li>\r\n");
      out.write("    </ul>\r\n");
      out.write("	</nav>\r\n");
      out.write("\r\n");
      out.write("  </header>\r\n");
      out.write("	<main>\r\n");
      out.write("	<table border=\"1\" width=\"300\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"3\" align=\"center\">");
      out.print(id);
      out.write("님 원하시는 버튼을 선택해주세요</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"center\" width=\"100\"><a href=\"modifyForm.jsp\">정보수정</a></td>\r\n");
      out.write("				<td align=\"center\" width=\"100\"><a href=\"deleteForm.jsp\">회원탈퇴</a></td>\r\n");
      out.write("				<td align=\"center\" width=\"100\"><a href=\"logout.jsp\">로그아웃</a></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		</main>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
