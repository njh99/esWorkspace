/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-12-11 06:39:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.mylogin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class newmember_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	padding-top: 20px;\r\n");
      out.write("	height: 100vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form {\r\n");
      out.write("	width: 400px;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	border: 1px solid rgb(255, 181, 181);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form label {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	width: 120px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form button {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	padding: 8px;\r\n");
      out.write("	display: block;\r\n");
      out.write("	background-color: rgb(105, 255, 105);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form #addr2 {\r\n");
      out.write("	margin-left: 126px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form input {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	width: 270px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-bottom: 1px dotted black;\r\n");
      out.write("	outline: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#email, #email2 {\r\n");
      out.write("	width: 120px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form p {\r\n");
      out.write("	font-size: small;\r\n");
      out.write("	margin-left: 105px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("        function onLoad(){\r\n");
      out.write("            //객체 찾기\r\n");
      out.write("            const pwd = document.querySelector('#pwd');\r\n");
      out.write("            const pwd2 = document.querySelector('#pwd2');\r\n");
      out.write("            const id =  document.querySelector('#id');\r\n");
      out.write("\r\n");
      out.write("            //이벤트 리스너 등록 및 핸들러 처리\r\n");
      out.write("            pwd.addEventListener(\"click\",()=>{\r\n");
      out.write("                pwd.nextSibling.textContent = \"영문자, 대소문자, 특수문자포함 8~32자\";\r\n");
      out.write("            });\r\n");
      out.write("            id.addEventListener(\"blur\",()=>validate(id));\r\n");
      out.write("            pwd.addEventListener(\"blur\",()=>validate(pwd));\r\n");
      out.write("            pwd2.addEventListener(\"blur\",()=>validate(pwd2));\r\n");
      out.write("\r\n");
      out.write("            function validate(obj){\r\n");
      out.write("                if(obj.value.length <= 0 ){\r\n");
      out.write("                    obj.nextSibling.textContent = \"필수 입력 항목입니다.\";\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            }\r\n");
      out.write("        \r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"onLoad();\">\r\n");
      out.write("	<form action=\"#\" method=\"post\">\r\n");
      out.write("		<table>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\" align=\"center\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><label for=\"id\">아이디</label></td>\r\n");
      out.write("				<td><input type=\"text\" name=\"id\" id=\"id\">\r\n");
      out.write("					<p></p>\r\n");
      out.write("				<td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><label for=\"pwd\">패스워드</label></td>\r\n");
      out.write("				<td><input type=\"password\" name=\"pwd\" id=\"pwd\">\r\n");
      out.write("					<p></p></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><label for=\"pwd2\">패스워드 확인</label></td>\r\n");
      out.write("				<td><input type=\"password\" name=\"pwd2\" id=\"pwd2\">\r\n");
      out.write("					<p></p></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td><label for=\"email\">이메일</label></td>\r\n");
      out.write("				<td><input type=\"text\" name=\"email\" id=\"email\"> <span>@</span>\r\n");
      out.write("					<input type=\"text\" name=\"email2\" id=\"email2\"> <br> <br></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td><label for=\"addr\">주소</label>\r\n");
      out.write("			<td><input type=\"text\" name=\"addr\" id=\"addr\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td><label for=\"addr\">상세주소</label>\r\n");
      out.write("			<td><input type=\"text\" name=\"addr2\" id=\"addr2\"></td>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\" align=\"center\">\r\n");
      out.write("				<input type=\"button\" value=\"회원가입\" onclick=\"inputCheck()\" />&nbsp;&nbsp;\r\n");
      out.write("				<input type=\"reset\" value=\"다시입력\" /></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
